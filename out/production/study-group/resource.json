{
  "swagger": "2.0",
  "info": {
    "title": "Us2.ai API Documentation",
    "description": "Us2.ai REST API Documentation for App Developers",
    "version": "1.3.1"
  },
  "host": "development-api.us2.ai",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/api/dicom/cache/{id}": {
      "get": {
        "operationId": "api_dicom_cache_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/dicom/classification/{id}": {
      "put": {
        "operationId": "api_dicom_classification_update",
        "description": "Updates classification with the given {id}",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Classification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Classification"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "api_dicom_classification_partial_update",
        "description": "Updates classification with the given {id}",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Classification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Classification"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this dicom.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/dicom/ds/{id}": {
      "get": {
        "operationId": "api_dicom_ds_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this dicom.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/dicom/process": {
      "post": {
        "operationId": "api_dicom_process",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/dicom/ps": {
      "get": {
        "operationId": "api_dicom_ps_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/dicom/sc": {
      "get": {
        "operationId": "api_dicom_sc_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/dicom/study/{study_id}": {
      "get": {
        "operationId": "api_dicom_study_list",
        "description": "Returns all dicom in the study given by {study_id}",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Dicom"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "study_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/dicom/upload/check": {
      "post": {
        "operationId": "api_dicom_upload_check",
        "summary": "Pre-upload check.",
        "description": "Checks if the studies & dicoms the user is attempting to upload already exists in the database.\n\nReturns a list of existing study metadata.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dicom"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dicom"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/dicom/{id}": {
      "get": {
        "operationId": "api_dicom_read",
        "description": "Returns dicom with the given {id}",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dicom"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this dicom.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/dicom/{id}/status": {
      "get": {
        "operationId": "api_dicom_status_read",
        "description": "Returns status information for dicom with the given {id}",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DicomStatus"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this dicom.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/job/actions": {
      "get": {
        "operationId": "api_job_actions_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Action"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/job/available": {
      "get": {
        "operationId": "api_job_available_list",
        "description": "Returns a list of jobs that can be scheduled on the server.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AvailableJob"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/job/queue": {
      "get": {
        "operationId": "api_job_queue_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobOverview"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/job/queue/{name}": {
      "put": {
        "operationId": "api_job_queue_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobOverview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobOverview"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_job_queue_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/job/submit": {
      "post": {
        "operationId": "api_job_submit_create",
        "description": "Creates a job on the server for doing the automated analysis on a given trial",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitJob"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SubmitJob"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/job/{job_id}": {
      "get": {
        "operationId": "api_job_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_job_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_job_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "job_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/measurement/": {
      "post": {
        "operationId": "api_measurement_create",
        "description": "Create a new measurement",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Editable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Editable"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/measurement/study/{study_id}/{code_id}": {
      "get": {
        "operationId": "api_measurement_study_list",
        "description": "Endpoint for everything related to the measurement object",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Editable"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "study_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "code_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/measurement/{id}": {
      "get": {
        "operationId": "api_measurement_read",
        "description": "Returns measurement with the given id",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Editable"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_measurement_update",
        "description": "Edits measurement with the given id",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Editable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Editable"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_measurement_delete",
        "description": "Delete measurement with the given id",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this measurements.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/study/": {
      "post": {
        "operationId": "api_bulk_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/study/assets/{id}": {
      "put": {
        "operationId": "api_study_assets_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Assets"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Assets"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this study.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/study/deleted/search": {
      "get": {
        "operationId": "api_study_deleted_search_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SearchStudy"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_study_deleted_search_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "api_study_deleted_search_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_study_deleted_search_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/study/deleted/{id}": {
      "delete": {
        "operationId": "api_study_deleted_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this study deleted.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/study/duplicate/{id}": {
      "put": {
        "operationId": "api_study_duplicate_update",
        "description": "Duplicate study given UUID identifying the study",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "api_study_duplicate_partial_update",
        "description": "Duplicate study given UUID identifying the study",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/study/field/{id}": {
      "get": {
        "operationId": "api_study_field_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Field"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/study/filterlist": {
      "get": {
        "operationId": "api_study_filterlist_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilterList"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_study_filterlist_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterList"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FilterList"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/study/filterlist/{id}": {
      "get": {
        "operationId": "api_study_filterlist_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FilterList"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_study_filterlist_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FilterList"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_study_filterlist_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this filter list.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/study/merge": {
      "post": {
        "operationId": "api_study_merge_create",
        "description": "Merge studies given the source and destination UUID identifying the studies",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/study/pdf/{id}": {
      "get": {
        "operationId": "api_study_pdf_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_study_pdf_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this study.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/study/search": {
      "get": {
        "operationId": "api_study_search_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SearchStudy"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_study_search_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "api_study_search_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_study_search_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/study/sr/{id}": {
      "get": {
        "operationId": "api_study_sr_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this study.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/study/trial": {
      "get": {
        "operationId": "api_study_trial_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudyTrial"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/study/uploader": {
      "get": {
        "operationId": "api_study_uploader_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudyUploader"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/study/version": {
      "get": {
        "operationId": "api_study_version_list",
        "description": "Retrieve list of unique versions of the studies in search results",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudyVersion"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/study/{id}": {
      "get": {
        "operationId": "api_study_read",
        "description": "Retrieve personal details of study with the given {id}",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_study_update",
        "description": "Update details of study with the given {id}",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_study_delete",
        "description": "Delete study with the given {id}",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this study.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/study/{id}/visits": {
      "get": {
        "operationId": "api_study_visits_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Study"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/sync/all_stats": {
      "post": {
        "operationId": "api_sync_all_stats_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/backend": {
      "get": {
        "operationId": "api_sync_backend_list",
        "description": "Retrieve list of available backend",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Backend"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/banners": {
      "get": {
        "operationId": "api_sync_banners_list",
        "description": "Retrieve list of available backend",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Banner"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/config": {
      "get": {
        "operationId": "api_sync_config_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Config"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/measurements": {
      "post": {
        "operationId": "api_sync_measurements_create",
        "description": "Returns a summary that matches the given query",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/modification/latest": {
      "get": {
        "operationId": "api_sync_modification_latest_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Modification"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/modification/{study_id}": {
      "get": {
        "operationId": "api_sync_modification_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Modification"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "study_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/sync/notifications/": {
      "get": {
        "operationId": "api_sync_notifications_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_sync_notifications_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "api_sync_notifications_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/protocol": {
      "get": {
        "operationId": "api_sync_protocol_read",
        "description": "Return details of current protocol display.\n     Also return list of available general and user created protocol",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_sync_protocol_create",
        "description": "Create or update an existing protocol",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_sync_protocol_update",
        "description": "Set the current protocol given the protocol uuid passed in",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "api_sync_protocol_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_sync_protocol_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/protocol/{id}": {
      "get": {
        "operationId": "api_sync_protocol_read",
        "description": "Return details of current protocol display.\n     Also return list of available general and user created protocol",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_sync_protocol_create",
        "description": "Create or update an existing protocol",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_sync_protocol_update",
        "description": "Set the current protocol given the protocol uuid passed in",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "api_sync_protocol_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_sync_protocol_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this protocol.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/sync/referralReasons/": {
      "get": {
        "operationId": "api_sync_referralReasons_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/report_pdf": {
      "post": {
        "operationId": "api_sync_report_pdf_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/secret": {
      "post": {
        "operationId": "api_sync_secret_create",
        "description": "Allows an authenticated user to create a secret that will expire after 10 seconds.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnetimeSecret"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OnetimeSecret"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/secret/{id}": {
      "get": {
        "operationId": "api_sync_secret_read",
        "description": "Returns (and burns) secret for the given {id}.\n          Does not require authentication, security is ensured by unguessable uuid and low expiration time",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OnetimeSecret"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this onetime secret.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/sync/summary": {
      "post": {
        "operationId": "api_sync_summary_create",
        "description": "Returns a summary that matches the given query",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SummaryQuery"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SummaryQuery"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/validation": {
      "get": {
        "operationId": "api_sync_validation_list",
        "description": "returns all datasets along with how many validation runs has been created from dataset",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroundTruthDataset"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/validation/{id}": {
      "delete": {
        "operationId": "api_sync_validation_delete",
        "description": "Deletes the dataset with the given {id}",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this ground truth dataset.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/sync/version": {
      "get": {
        "operationId": "api_sync_version_list",
        "description": "Returns version information of the backend software version",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/versions": {
      "get": {
        "operationId": "api_sync_versions_list",
        "description": "Returns available commits for the use of job scheduling",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Version"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/sync/yield": {
      "post": {
        "operationId": "api_sync_yield_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/task/project": {
      "get": {
        "operationId": "api_task_project_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Project"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_task_project_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/task/project/{id}": {
      "get": {
        "operationId": "api_task_project_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_task_project_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_task_project_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this project.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/task/project/{id}/next": {
      "get": {
        "operationId": "api_task_project_next_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this project.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/task/project/{project_id}/tasks": {
      "get": {
        "operationId": "api_task_project_tasks_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Task"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/task/project_template": {
      "get": {
        "operationId": "api_task_project_template_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectTemplate"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_task_project_template_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/task/project_template/{id}": {
      "get": {
        "operationId": "api_task_project_template_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_task_project_template_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_task_project_template_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this project template.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/task/study/{study_id}": {
      "get": {
        "operationId": "api_task_study_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Task"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "study_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/task/study/{study_id}/{project_id}": {
      "get": {
        "operationId": "api_task_study_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Task"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "study_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/task/trial": {
      "get": {
        "operationId": "api_task_trial_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trial"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_task_trial_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/task/trial/export/{id}": {
      "post": {
        "operationId": "api_task_trial_export_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this trial.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/task/trial/uploader": {
      "get": {
        "operationId": "api_task_trial_uploader_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrialUploader"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/task/trial/{id}": {
      "get": {
        "operationId": "api_task_trial_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_task_trial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_task_trial_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this trial.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/task/{id}": {
      "get": {
        "operationId": "api_task_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_task_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this task.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/translator": {
      "post": {
        "operationId": "api_translator_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/change_password": {
      "post": {
        "operationId": "api_users_change_password_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/checkuser": {
      "get": {
        "operationId": "api_users_checkuser_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/current": {
      "get": {
        "operationId": "api_users_current_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_users_current_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/get_user_idp": {
      "post": {
        "operationId": "api_users_get_user_idp_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RetrieveUserIdp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RetrieveUserIdp"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/groups": {
      "get": {
        "operationId": "api_users_groups_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Group"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_users_groups_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/groups/{group}": {
      "delete": {
        "operationId": "api_users_groups_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "group",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/users/logging": {
      "post": {
        "operationId": "api_users_logging_create",
        "description": "Logs from frontend",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Logging"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Logging"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/login": {
      "post": {
        "operationId": "api_users_login_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/logs": {
      "get": {
        "operationId": "api_users_logs_list",
        "description": "Returns paginated list of logs for the authenticated user",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Log"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/mfa/preference": {
      "post": {
        "operationId": "api_users_mfa_preference_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetUserMfaPreference"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SetUserMfaPreference"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/mfa/setup": {
      "post": {
        "operationId": "api_users_mfa_setup_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssociateSoftwareToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AssociateSoftwareToken"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/mfa/verify": {
      "post": {
        "operationId": "api_users_mfa_verify_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifySoftwareToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VerifySoftwareToken"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/new_password": {
      "post": {
        "operationId": "api_users_new_password_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompleteNewPassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CompleteNewPassword"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/org": {
      "get": {
        "operationId": "api_users_org_list",
        "description": "Returns list of all users in the authenticated user's org",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/refresh": {
      "post": {
        "operationId": "api_users_refresh_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefreshToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RefreshToken"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/reset_password": {
      "post": {
        "operationId": "api_users_reset_password_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResetPassword"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/saml2/jwt": {
      "post": {
        "operationId": "api_users_saml2_jwt_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SAML2Jwt"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SAML2Jwt"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/subscription": {
      "get": {
        "operationId": "api_users_subscription_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/subscriptions": {
      "get": {
        "operationId": "api_users_subscriptions_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Subscription"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_users_subscriptions_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/subscriptions/{SubscriptionId}": {
      "get": {
        "operationId": "api_users_subscriptions_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_users_subscriptions_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_users_subscriptions_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "SubscriptionId",
          "in": "path",
          "description": "A unique value identifying this subscription.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/users/templates": {
      "get": {
        "operationId": "api_users_templates_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Template"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_users_templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Template"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Template"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/templates/{TemplateId}": {
      "get": {
        "operationId": "api_users_templates_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Template"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_users_templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "TemplateId",
          "in": "path",
          "description": "A unique value identifying this template.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/users/users": {
      "get": {
        "operationId": "api_users_users_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ManageUser"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_users_users_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManageUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManageUser"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/users/users/{username}": {
      "get": {
        "operationId": "api_users_users_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManageUser"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_users_users_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManageUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManageUser"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "api_users_users_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "username",
          "in": "path",
          "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
          "required": true,
          "type": "string",
          "pattern": "^[\\w.@+-]+$"
        }
      ]
    },
    "/api/validation/comparison/{id}": {
      "get": {
        "operationId": "api_validation_comparison_read",
        "description": "Returns match of dataset with automated measurements",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_validation_comparison_update",
        "description": "Updates stats for the given snapshot data",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/validation/generate/{id}": {
      "get": {
        "operationId": "api_validation_generate_read",
        "description": "Returns a generated read graph based on input search parameters",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this study.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/validation/gt_update/{id}": {
      "put": {
        "operationId": "api_validation_gt_update_update",
        "description": "Updates certain properties for ground truth",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroundTruthUpdateDisplay"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GroundTruthUpdateDisplay"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "api_validation_gt_update_partial_update",
        "description": "Updates certain properties for ground truth",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroundTruthUpdateDisplay"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GroundTruthUpdateDisplay"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this gt measurements.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/api/validation/options": {
      "get": {
        "operationId": "api_validation_options_list",
        "description": "Returns list of available measurements that matches query",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/validation/snapshot": {
      "get": {
        "operationId": "api_validation_snapshot_list",
        "description": "Shows all available snapshots",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SnapshotDisplay"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_validation_snapshot_create",
        "description": "Create a new snapshots or update existing",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotDisplay"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotDisplay"
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/validation/validation": {
      "get": {
        "operationId": "api_validation_validation_list",
        "description": "Lists all (dataset, automated measurement) pairings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationRun"
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/validation/validation/{id}": {
      "delete": {
        "operationId": "api_validation_validation_delete",
        "description": "Delete pairing with the given {id}",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/dicom/cache/{id}": {
      "get": {
        "operationId": "dicom_cache_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "dicom"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/dicom/classification/{id}": {
      "put": {
        "operationId": "dicom_classification_update",
        "description": "Updates classification with the given {id}",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Classification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Classification"
            }
          }
        },
        "tags": [
          "dicom"
        ]
      },
      "patch": {
        "operationId": "dicom_classification_partial_update",
        "description": "Updates classification with the given {id}",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Classification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Classification"
            }
          }
        },
        "tags": [
          "dicom"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this dicom.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/dicom/ds/{id}": {
      "get": {
        "operationId": "dicom_ds_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "dicom"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this dicom.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/dicom/process": {
      "post": {
        "operationId": "dicom_process",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "dicom"
        ]
      },
      "parameters": []
    },
    "/dicom/ps": {
      "get": {
        "operationId": "dicom_ps_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "dicom"
        ]
      },
      "parameters": []
    },
    "/dicom/sc": {
      "get": {
        "operationId": "dicom_sc_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "dicom"
        ]
      },
      "parameters": []
    },
    "/dicom/study/{study_id}": {
      "get": {
        "operationId": "dicom_study_list",
        "description": "Returns all dicom in the study given by {study_id}",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Dicom"
              }
            }
          }
        },
        "tags": [
          "dicom"
        ]
      },
      "parameters": [
        {
          "name": "study_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/dicom/upload/check": {
      "post": {
        "operationId": "dicom_upload_check",
        "summary": "Pre-upload check.",
        "description": "Checks if the studies & dicoms the user is attempting to upload already exists in the database.\n\nReturns a list of existing study metadata.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dicom"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dicom"
            }
          }
        },
        "tags": [
          "dicom"
        ]
      },
      "parameters": []
    },
    "/dicom/{id}": {
      "get": {
        "operationId": "dicom_read",
        "description": "Returns dicom with the given {id}",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dicom"
            }
          }
        },
        "tags": [
          "dicom"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this dicom.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/dicom/{id}/status": {
      "get": {
        "operationId": "dicom_status_read",
        "description": "Returns status information for dicom with the given {id}",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DicomStatus"
            }
          }
        },
        "tags": [
          "dicom"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this dicom.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/job/actions": {
      "get": {
        "operationId": "job_actions_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Action"
              }
            }
          }
        },
        "tags": [
          "job"
        ]
      },
      "parameters": []
    },
    "/job/available": {
      "get": {
        "operationId": "job_available_list",
        "description": "Returns a list of jobs that can be scheduled on the server.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AvailableJob"
              }
            }
          }
        },
        "tags": [
          "job"
        ]
      },
      "parameters": []
    },
    "/job/queue": {
      "get": {
        "operationId": "job_queue_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobOverview"
              }
            }
          }
        },
        "tags": [
          "job"
        ]
      },
      "parameters": []
    },
    "/job/queue/{name}": {
      "put": {
        "operationId": "job_queue_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobOverview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobOverview"
            }
          }
        },
        "tags": [
          "job"
        ]
      },
      "delete": {
        "operationId": "job_queue_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "job"
        ]
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/job/submit": {
      "post": {
        "operationId": "job_submit_create",
        "description": "Creates a job on the server for doing the automated analysis on a given trial",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitJob"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SubmitJob"
            }
          }
        },
        "tags": [
          "job"
        ]
      },
      "parameters": []
    },
    "/job/{job_id}": {
      "get": {
        "operationId": "job_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "tags": [
          "job"
        ]
      },
      "put": {
        "operationId": "job_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "tags": [
          "job"
        ]
      },
      "delete": {
        "operationId": "job_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "job"
        ]
      },
      "parameters": [
        {
          "name": "job_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/measurement/": {
      "post": {
        "operationId": "measurement_create",
        "description": "Create a new measurement",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Editable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Editable"
            }
          }
        },
        "tags": [
          "measurement"
        ]
      },
      "parameters": []
    },
    "/measurement/study/{study_id}/{code_id}": {
      "get": {
        "operationId": "measurement_study_list",
        "description": "Endpoint for everything related to the measurement object",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Editable"
              }
            }
          }
        },
        "tags": [
          "measurement"
        ]
      },
      "parameters": [
        {
          "name": "study_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "code_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/measurement/{id}": {
      "get": {
        "operationId": "measurement_read",
        "description": "Returns measurement with the given id",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Editable"
            }
          }
        },
        "tags": [
          "measurement"
        ]
      },
      "put": {
        "operationId": "measurement_update",
        "description": "Edits measurement with the given id",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Editable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Editable"
            }
          }
        },
        "tags": [
          "measurement"
        ]
      },
      "delete": {
        "operationId": "measurement_delete",
        "description": "Delete measurement with the given id",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "measurement"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this measurements.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/robots.txt": {
      "get": {
        "operationId": "robots.txt_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "robots.txt"
        ]
      },
      "parameters": []
    },
    "/sitemap.xml": {
      "get": {
        "operationId": "sitemap.xml_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "sitemap.xml"
        ]
      },
      "parameters": []
    },
    "/study/": {
      "post": {
        "operationId": "bulk_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        },
        "tags": [
          "bulk_update"
        ]
      },
      "parameters": []
    },
    "/study/assets/{id}": {
      "put": {
        "operationId": "study_assets_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Assets"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Assets"
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this study.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/study/deleted/search": {
      "get": {
        "operationId": "study_deleted_search_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SearchStudy"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "put": {
        "operationId": "study_deleted_search_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "patch": {
        "operationId": "study_deleted_search_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "delete": {
        "operationId": "study_deleted_search_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": []
    },
    "/study/deleted/{id}": {
      "delete": {
        "operationId": "study_deleted_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this study deleted.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/study/duplicate/{id}": {
      "put": {
        "operationId": "study_duplicate_update",
        "description": "Duplicate study given UUID identifying the study",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "patch": {
        "operationId": "study_duplicate_partial_update",
        "description": "Duplicate study given UUID identifying the study",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/study/field/{id}": {
      "get": {
        "operationId": "study_field_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Field"
              }
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/study/filterlist": {
      "get": {
        "operationId": "study_filterlist_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilterList"
              }
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "post": {
        "operationId": "study_filterlist_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterList"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FilterList"
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": []
    },
    "/study/filterlist/{id}": {
      "get": {
        "operationId": "study_filterlist_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FilterList"
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "put": {
        "operationId": "study_filterlist_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FilterList"
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "delete": {
        "operationId": "study_filterlist_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this filter list.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/study/merge": {
      "post": {
        "operationId": "study_merge_create",
        "description": "Merge studies given the source and destination UUID identifying the studies",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": []
    },
    "/study/pdf/{id}": {
      "get": {
        "operationId": "study_pdf_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "study"
        ]
      },
      "post": {
        "operationId": "study_pdf_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this study.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/study/search": {
      "get": {
        "operationId": "study_search_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SearchStudy"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "put": {
        "operationId": "study_search_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "patch": {
        "operationId": "study_search_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SearchStudy"
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "delete": {
        "operationId": "study_search_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": []
    },
    "/study/sr/{id}": {
      "get": {
        "operationId": "study_sr_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this study.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/study/trial": {
      "get": {
        "operationId": "study_trial_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudyTrial"
              }
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": []
    },
    "/study/uploader": {
      "get": {
        "operationId": "study_uploader_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudyUploader"
              }
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": []
    },
    "/study/version": {
      "get": {
        "operationId": "study_version_list",
        "description": "Retrieve list of unique versions of the studies in search results",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudyVersion"
              }
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": []
    },
    "/study/{id}": {
      "get": {
        "operationId": "study_read",
        "description": "Retrieve personal details of study with the given {id}",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "put": {
        "operationId": "study_update",
        "description": "Update details of study with the given {id}",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Study"
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "delete": {
        "operationId": "study_delete",
        "description": "Delete study with the given {id}",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this study.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/study/{id}/visits": {
      "get": {
        "operationId": "study_visits_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Study"
              }
            }
          }
        },
        "tags": [
          "study"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/sync/all_stats": {
      "post": {
        "operationId": "sync_all_stats_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/backend": {
      "get": {
        "operationId": "sync_backend_list",
        "description": "Retrieve list of available backend",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Backend"
              }
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/banners": {
      "get": {
        "operationId": "sync_banners_list",
        "description": "Retrieve list of available backend",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Banner"
              }
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/config": {
      "get": {
        "operationId": "sync_config_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Config"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/measurements": {
      "post": {
        "operationId": "sync_measurements_create",
        "description": "Returns a summary that matches the given query",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/modification/latest": {
      "get": {
        "operationId": "sync_modification_latest_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Modification"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/modification/{study_id}": {
      "get": {
        "operationId": "sync_modification_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Modification"
              }
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": [
        {
          "name": "study_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/sync/notifications/": {
      "get": {
        "operationId": "sync_notifications_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "put": {
        "operationId": "sync_notifications_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "patch": {
        "operationId": "sync_notifications_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/protocol": {
      "get": {
        "operationId": "sync_protocol_read",
        "description": "Return details of current protocol display.\n     Also return list of available general and user created protocol",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "post": {
        "operationId": "sync_protocol_create",
        "description": "Create or update an existing protocol",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "put": {
        "operationId": "sync_protocol_update",
        "description": "Set the current protocol given the protocol uuid passed in",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "patch": {
        "operationId": "sync_protocol_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "delete": {
        "operationId": "sync_protocol_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/protocol/{id}": {
      "get": {
        "operationId": "sync_protocol_read",
        "description": "Return details of current protocol display.\n     Also return list of available general and user created protocol",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "post": {
        "operationId": "sync_protocol_create",
        "description": "Create or update an existing protocol",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "put": {
        "operationId": "sync_protocol_update",
        "description": "Set the current protocol given the protocol uuid passed in",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "patch": {
        "operationId": "sync_protocol_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "delete": {
        "operationId": "sync_protocol_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this protocol.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/sync/referralReasons/": {
      "get": {
        "operationId": "sync_referralReasons_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/report_pdf": {
      "post": {
        "operationId": "sync_report_pdf_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/secret": {
      "post": {
        "operationId": "sync_secret_create",
        "description": "Allows an authenticated user to create a secret that will expire after 10 seconds.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnetimeSecret"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OnetimeSecret"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/secret/{id}": {
      "get": {
        "operationId": "sync_secret_read",
        "description": "Returns (and burns) secret for the given {id}.\n          Does not require authentication, security is ensured by unguessable uuid and low expiration time",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OnetimeSecret"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this onetime secret.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/sync/summary": {
      "post": {
        "operationId": "sync_summary_create",
        "description": "Returns a summary that matches the given query",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SummaryQuery"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SummaryQuery"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/validation": {
      "get": {
        "operationId": "sync_validation_list",
        "description": "returns all datasets along with how many validation runs has been created from dataset",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroundTruthDataset"
              }
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/validation/{id}": {
      "delete": {
        "operationId": "sync_validation_delete",
        "description": "Deletes the dataset with the given {id}",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this ground truth dataset.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/sync/version": {
      "get": {
        "operationId": "sync_version_list",
        "description": "Returns version information of the backend software version",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/versions": {
      "get": {
        "operationId": "sync_versions_list",
        "description": "Returns available commits for the use of job scheduling",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Version"
              }
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/sync/yield": {
      "post": {
        "operationId": "sync_yield_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "tags": [
          "sync"
        ]
      },
      "parameters": []
    },
    "/task/project": {
      "get": {
        "operationId": "task_project_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Project"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "post": {
        "operationId": "task_project_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "parameters": []
    },
    "/task/project/{id}": {
      "get": {
        "operationId": "task_project_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "put": {
        "operationId": "task_project_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "delete": {
        "operationId": "task_project_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "task"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this project.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/task/project/{id}/next": {
      "get": {
        "operationId": "task_project_next_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this project.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/task/project/{project_id}/tasks": {
      "get": {
        "operationId": "task_project_tasks_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Task"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "parameters": [
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/task/project_template": {
      "get": {
        "operationId": "task_project_template_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectTemplate"
              }
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "post": {
        "operationId": "task_project_template_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "parameters": []
    },
    "/task/project_template/{id}": {
      "get": {
        "operationId": "task_project_template_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "put": {
        "operationId": "task_project_template_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "delete": {
        "operationId": "task_project_template_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "task"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this project template.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/task/study/{study_id}": {
      "get": {
        "operationId": "task_study_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Task"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "parameters": [
        {
          "name": "study_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/task/study/{study_id}/{project_id}": {
      "get": {
        "operationId": "task_study_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Task"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "parameters": [
        {
          "name": "study_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/task/trial": {
      "get": {
        "operationId": "task_trial_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Trial"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "post": {
        "operationId": "task_trial_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "parameters": []
    },
    "/task/trial/export/{id}": {
      "post": {
        "operationId": "task_trial_export_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "task"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this trial.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/task/trial/uploader": {
      "get": {
        "operationId": "task_trial_uploader_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrialUploader"
              }
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "parameters": []
    },
    "/task/trial/{id}": {
      "get": {
        "operationId": "task_trial_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "put": {
        "operationId": "task_trial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "delete": {
        "operationId": "task_trial_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "task"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this trial.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/task/{id}": {
      "get": {
        "operationId": "task_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "put": {
        "operationId": "task_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "tags": [
          "task"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this task.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/translator": {
      "post": {
        "operationId": "translator_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "translator"
        ]
      },
      "parameters": []
    },
    "/users/change_password": {
      "post": {
        "operationId": "users_change_password_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/checkuser": {
      "get": {
        "operationId": "users_checkuser_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/current": {
      "get": {
        "operationId": "users_current_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "users_current_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/get_user_idp": {
      "post": {
        "operationId": "users_get_user_idp_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RetrieveUserIdp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RetrieveUserIdp"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/groups": {
      "get": {
        "operationId": "users_groups_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Group"
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "users_groups_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/groups/{group}": {
      "delete": {
        "operationId": "users_groups_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "group",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/logging": {
      "post": {
        "operationId": "users_logging_create",
        "description": "Logs from frontend",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Logging"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Logging"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/login": {
      "post": {
        "operationId": "users_login_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/logs": {
      "get": {
        "operationId": "users_logs_list",
        "description": "Returns paginated list of logs for the authenticated user",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Log"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/mfa/preference": {
      "post": {
        "operationId": "users_mfa_preference_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetUserMfaPreference"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SetUserMfaPreference"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/mfa/setup": {
      "post": {
        "operationId": "users_mfa_setup_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssociateSoftwareToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AssociateSoftwareToken"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/mfa/verify": {
      "post": {
        "operationId": "users_mfa_verify_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifySoftwareToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VerifySoftwareToken"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/new_password": {
      "post": {
        "operationId": "users_new_password_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompleteNewPassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CompleteNewPassword"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/org": {
      "get": {
        "operationId": "users_org_list",
        "description": "Returns list of all users in the authenticated user's org",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/refresh": {
      "post": {
        "operationId": "users_refresh_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefreshToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RefreshToken"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/reset_password": {
      "post": {
        "operationId": "users_reset_password_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResetPassword"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/saml2/jwt": {
      "post": {
        "operationId": "users_saml2_jwt_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SAML2Jwt"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SAML2Jwt"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/subscription": {
      "get": {
        "operationId": "users_subscription_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/subscriptions": {
      "get": {
        "operationId": "users_subscriptions_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Subscription"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "users_subscriptions_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/subscriptions/{SubscriptionId}": {
      "get": {
        "operationId": "users_subscriptions_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "users_subscriptions_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "users_subscriptions_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "SubscriptionId",
          "in": "path",
          "description": "A unique value identifying this subscription.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/templates": {
      "get": {
        "operationId": "users_templates_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Template"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "users_templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Template"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Template"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/templates/{TemplateId}": {
      "get": {
        "operationId": "users_templates_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Template"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "users_templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "TemplateId",
          "in": "path",
          "description": "A unique value identifying this template.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/users": {
      "get": {
        "operationId": "users_users_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ManageUser"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "users_users_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManageUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManageUser"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/users/{username}": {
      "get": {
        "operationId": "users_users_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManageUser"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "users_users_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManageUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManageUser"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "users_users_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "username",
          "in": "path",
          "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
          "required": true,
          "type": "string",
          "pattern": "^[\\w.@+-]+$"
        }
      ]
    },
    "/validation/comparison/{id}": {
      "get": {
        "operationId": "validation_comparison_read",
        "description": "Returns match of dataset with automated measurements",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          }
        },
        "tags": [
          "validation"
        ]
      },
      "put": {
        "operationId": "validation_comparison_update",
        "description": "Updates stats for the given snapshot data",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          }
        },
        "tags": [
          "validation"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/validation/generate/{id}": {
      "get": {
        "operationId": "validation_generate_read",
        "description": "Returns a generated read graph based on input search parameters",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          }
        },
        "tags": [
          "validation"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this study.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/validation/gt_update/{id}": {
      "put": {
        "operationId": "validation_gt_update_update",
        "description": "Updates certain properties for ground truth",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroundTruthUpdateDisplay"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GroundTruthUpdateDisplay"
            }
          }
        },
        "tags": [
          "validation"
        ]
      },
      "patch": {
        "operationId": "validation_gt_update_partial_update",
        "description": "Updates certain properties for ground truth",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroundTruthUpdateDisplay"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GroundTruthUpdateDisplay"
            }
          }
        },
        "tags": [
          "validation"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this gt measurements.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/validation/options": {
      "get": {
        "operationId": "validation_options_list",
        "description": "Returns list of available measurements that matches query",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "validation"
        ]
      },
      "parameters": []
    },
    "/validation/snapshot": {
      "get": {
        "operationId": "validation_snapshot_list",
        "description": "Shows all available snapshots",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SnapshotDisplay"
              }
            }
          }
        },
        "tags": [
          "validation"
        ]
      },
      "post": {
        "operationId": "validation_snapshot_create",
        "description": "Create a new snapshots or update existing",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotDisplay"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotDisplay"
            }
          }
        },
        "tags": [
          "validation"
        ]
      },
      "parameters": []
    },
    "/validation/validation": {
      "get": {
        "operationId": "validation_validation_list",
        "description": "Lists all (dataset, automated measurement) pairings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationRun"
              }
            }
          }
        },
        "tags": [
          "validation"
        ]
      },
      "parameters": []
    },
    "/validation/validation/{id}": {
      "delete": {
        "operationId": "validation_validation_delete",
        "description": "Delete pairing with the given {id}",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "validation"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "definitions": {
    "Classification": {
      "required": [
        "view_id"
      ],
      "type": "object",
      "properties": {
        "view_id": {
          "title": "View id",
          "type": "integer"
        },
        "view_display": {
          "title": "View display",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "file_type": {
          "title": "File type",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "prob": {
          "title": "Prob",
          "type": "number",
          "readOnly": true
        },
        "confidence": {
          "title": "Confidence",
          "type": "number",
          "readOnly": true
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "default": []
        },
        "quality": {
          "title": "Quality",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        }
      }
    },
    "Perms": {
      "required": [
        "groups",
        "perms"
      ],
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "perms": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "Study": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid"
        },
        "firstName": {
          "title": "FirstName",
          "type": "string",
          "maxLength": 63,
          "x-nullable": true
        },
        "lastName": {
          "title": "LastName",
          "type": "string",
          "maxLength": 63,
          "x-nullable": true
        },
        "studyName": {
          "title": "StudyName",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "patientID": {
          "title": "PatientID",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "gender": {
          "title": "Gender",
          "type": "string",
          "maxLength": 1,
          "x-nullable": true
        },
        "reportCompleted": {
          "title": "ReportCompleted",
          "type": "boolean",
          "readOnly": true
        },
        "reportVideoPath": {
          "title": "ReportVideoPath",
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "x-nullable": true
        },
        "dob": {
          "title": "Dob",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "ed": {
          "title": "Ed",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "approvedBy": {
          "title": "ApprovedBy",
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "x-nullable": true
        },
        "flagged": {
          "title": "Flagged",
          "type": "boolean"
        },
        "referralReason": {
          "title": "ReferralReason",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "age": {
          "title": "Age",
          "type": "string",
          "readOnly": true
        },
        "output_path": {
          "title": "Output path",
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "x-nullable": true
        },
        "otherReason": {
          "title": "OtherReason",
          "type": "string",
          "x-nullable": true
        },
        "processedDate": {
          "title": "ProcessedDate",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "approved": {
          "title": "Approved",
          "type": "boolean"
        },
        "trial": {
          "title": "Trial",
          "type": "string",
          "maxLength": 63,
          "x-nullable": true
        },
        "code_version": {
          "title": "Code version",
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "x-nullable": true
        },
        "cohorts": {
          "title": "Cohorts",
          "type": "string"
        },
        "customer": {
          "title": "Customer",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "uploader": {
          "title": "Uploader",
          "type": "string",
          "maxLength": 320,
          "x-nullable": true
        },
        "visit": {
          "title": "Visit",
          "type": "string",
          "maxLength": 63,
          "x-nullable": true
        },
        "visits": {
          "title": "Visits",
          "type": "string"
        },
        "coreLabApproved": {
          "title": "Corelabapproved",
          "type": "boolean"
        },
        "coreLabApprovedBy": {
          "title": "CoreLabApprovedBy",
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "x-nullable": true
        },
        "coreLabApprovedAt": {
          "title": "CoreLabApprovedAt",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "form": {
          "title": "Form",
          "type": "string"
        },
        "location": {
          "title": "Location",
          "type": "string",
          "maxLength": 15,
          "x-nullable": true
        },
        "region": {
          "title": "Region",
          "type": "string",
          "readOnly": true
        },
        "_perms": {
          "title": "perms",
          "type": "string"
        },
        "n_complete": {
          "title": "N complete",
          "type": "string",
          "readOnly": true
        },
        "n_total": {
          "title": "N total",
          "type": "string",
          "readOnly": true
        },
        "BSA": {
          "title": "Bsa",
          "type": "number",
          "x-nullable": true
        },
        "tags": {
          "title": "Tags",
          "type": "string"
        },
        "siteID": {
          "title": "SiteID",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "delete_at": {
          "title": "Delete at",
          "type": "string"
        },
        "notes": {
          "title": "Notes",
          "type": "string",
          "x-nullable": true
        },
        "add_perms": {
          "$ref": "#/definitions/Perms"
        },
        "del_perms": {
          "$ref": "#/definitions/Perms"
        },
        "findings_properties": {
          "title": "Findings properties",
          "type": "string"
        }
      }
    },
    "Dicom": {
      "required": [
        "tags",
        "mimetype",
        "view_id",
        "study"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "study_id": {
          "title": "Study id",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "title": "Tags",
          "type": "object"
        },
        "from_dicom_id": {
          "title": "From dicom id",
          "type": "string",
          "readOnly": true
        },
        "yBaseline": {
          "title": "Ybaseline",
          "type": "string",
          "readOnly": true
        },
        "mimetype": {
          "title": "Mimetype",
          "type": "string",
          "minLength": 1
        },
        "ai_used": {
          "title": "Ai used",
          "type": "string"
        },
        "code_version": {
          "title": "Code version",
          "type": "string",
          "maxLength": 31,
          "x-nullable": true
        },
        "view_id": {
          "title": "View id",
          "type": "integer"
        },
        "view_display": {
          "title": "View display",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "file_type": {
          "title": "File type",
          "type": "string",
          "minLength": 1
        },
        "prob": {
          "title": "Prob",
          "type": "number"
        },
        "confidence": {
          "title": "Confidence",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "title": "Properties",
          "type": "string"
        },
        "quality": {
          "title": "Quality",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "study": {
          "$ref": "#/definitions/Study"
        },
        "measurements": {
          "title": "Measurements",
          "type": "string",
          "readOnly": true
        },
        "width": {
          "title": "Width",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "height": {
          "title": "Height",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "fps": {
          "title": "Fps",
          "type": "number",
          "x-nullable": true
        },
        "n_frames": {
          "title": "N frames",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "path": {
          "title": "Path",
          "type": "string",
          "readOnly": true
        },
        "graph": {
          "title": "Graph",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "DicomStatus": {
      "required": [
        "processing_completed",
        "used",
        "high",
        "low",
        "present",
        "missing"
      ],
      "type": "object",
      "properties": {
        "processing_completed": {
          "title": "Processing completed",
          "type": "boolean"
        },
        "used": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "high": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "low": {
          "title": "Low",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "present": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "missing": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "Action": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "AvailableJob": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Worker": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Job": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "short_text": {
          "title": "Short text",
          "type": "string",
          "readOnly": true
        },
        "func_name": {
          "title": "Func name",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "trace": {
          "title": "Trace",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "kwargs": {
          "title": "Kwargs",
          "type": "string",
          "readOnly": true
        },
        "ended_at": {
          "title": "Ended at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "tooltip": {
          "title": "Tooltip",
          "type": "string",
          "readOnly": true
        },
        "result": {
          "title": "Result",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "readOnly": true
        },
        "retries_left": {
          "title": "Retries left",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "JobOverview": {
      "required": [
        "name",
        "count",
        "workers",
        "failed"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        },
        "count": {
          "title": "Count",
          "type": "integer"
        },
        "workers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Worker"
          }
        },
        "failed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        }
      }
    },
    "SubmitJob": {
      "type": "object",
      "properties": {
        "message": {
          "title": "Message",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "version": {
          "title": "Version",
          "type": "string"
        },
        "from_jobs": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "from_trials": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "from_search": {
          "title": "From search",
          "type": "string"
        },
        "trial": {
          "title": "Trial",
          "type": "string",
          "minLength": 1
        },
        "selected_views": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "gt": {
          "title": "Gt",
          "type": "string",
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "notify": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "email",
            "minLength": 1
          }
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "delete_at": {
          "title": "Delete at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "keep_permanent": {
          "title": "Keep permanent",
          "type": "boolean",
          "x-nullable": true
        }
      }
    },
    "Editable": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "code_id": {
          "title": "Code id",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "used": {
          "title": "Used",
          "type": "boolean"
        },
        "note": {
          "title": "Note",
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "x-nullable": true
        },
        "plot_obj": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": true
            }
          }
        },
        "value": {
          "title": "Value",
          "type": "number"
        },
        "unit": {
          "title": "Unit",
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "x-nullable": true
        },
        "cluster": {
          "title": "Cluster",
          "type": "integer",
          "readOnly": true,
          "x-nullable": true
        },
        "confidence": {
          "title": "Confidence",
          "type": "integer"
        },
        "frame": {
          "title": "Frame",
          "type": "integer",
          "x-nullable": true
        },
        "dependencies": {
          "title": "Dependencies",
          "type": "string",
          "readOnly": true
        },
        "dicom_id": {
          "title": "Dicom id",
          "type": "string",
          "readOnly": true
        },
        "study_id": {
          "title": "Study id",
          "type": "string",
          "readOnly": true
        },
        "save": {
          "title": "Save",
          "type": "boolean",
          "default": false
        },
        "dicom": {
          "title": "Dicom",
          "type": "string",
          "format": "uuid"
        },
        "study": {
          "title": "Study",
          "type": "string",
          "format": "uuid"
        },
        "protocol": {
          "title": "Protocol",
          "type": "string",
          "minLength": 1
        },
        "code": {
          "title": "Code",
          "type": "string",
          "minLength": 1
        },
        "repr": {
          "title": "Repr",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Asset": {
      "required": [
        "url",
        "method",
        "params",
        "modality"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "minLength": 1
        },
        "method": {
          "title": "Method",
          "type": "string",
          "minLength": 1
        },
        "params": {
          "title": "Params",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "modality": {
          "title": "Modality",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Assets": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          },
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "boolean",
          "default": false
        },
        "main_findings": {
          "title": "Main findings",
          "type": "boolean",
          "default": false
        },
        "image": {
          "title": "Image",
          "type": "boolean",
          "default": false
        },
        "designators": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "sync_by_measurement": {
          "title": "Sync by measurement",
          "type": "boolean",
          "default": false
        }
      }
    },
    "SearchStudy": {
      "required": [
        "BSA"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid"
        },
        "firstName": {
          "title": "FirstName",
          "type": "string",
          "maxLength": 63,
          "x-nullable": true
        },
        "lastName": {
          "title": "LastName",
          "type": "string",
          "maxLength": 63,
          "x-nullable": true
        },
        "studyName": {
          "title": "StudyName",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "patientID": {
          "title": "PatientID",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "gender": {
          "title": "Gender",
          "type": "string",
          "maxLength": 1,
          "x-nullable": true
        },
        "reportCompleted": {
          "title": "ReportCompleted",
          "type": "boolean"
        },
        "reportVideoPath": {
          "title": "ReportVideoPath",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "dob": {
          "title": "Dob",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "ed": {
          "title": "Ed",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "approvedBy": {
          "title": "ApprovedBy",
          "type": "string",
          "maxLength": 63,
          "x-nullable": true
        },
        "flagged": {
          "title": "Flagged",
          "type": "boolean"
        },
        "referralReason": {
          "title": "ReferralReason",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "age": {
          "title": "Age",
          "type": "string",
          "readOnly": true
        },
        "output_path": {
          "title": "Output path",
          "type": "string",
          "maxLength": 4095,
          "x-nullable": true
        },
        "otherReason": {
          "title": "OtherReason",
          "type": "string",
          "x-nullable": true
        },
        "processedDate": {
          "title": "ProcessedDate",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "approved": {
          "title": "Approved",
          "type": "boolean"
        },
        "trial": {
          "title": "Trial",
          "type": "string",
          "maxLength": 63,
          "x-nullable": true
        },
        "code_version": {
          "title": "Code version",
          "type": "string",
          "maxLength": 63,
          "x-nullable": true
        },
        "cohorts": {
          "title": "Cohorts",
          "type": "string"
        },
        "customer": {
          "title": "Customer",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "uploader": {
          "title": "Uploader",
          "type": "string",
          "maxLength": 320,
          "x-nullable": true
        },
        "visit": {
          "title": "Visit",
          "type": "string",
          "maxLength": 63,
          "x-nullable": true
        },
        "visits": {
          "title": "Visits",
          "type": "string"
        },
        "coreLabApproved": {
          "title": "Corelabapproved",
          "type": "boolean"
        },
        "coreLabApprovedBy": {
          "title": "CoreLabApprovedBy",
          "type": "string",
          "maxLength": 63,
          "x-nullable": true
        },
        "coreLabApprovedAt": {
          "title": "CoreLabApprovedAt",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "form": {
          "title": "Form",
          "type": "string"
        },
        "location": {
          "title": "Location",
          "type": "string",
          "maxLength": 15,
          "x-nullable": true
        },
        "region": {
          "title": "Region",
          "type": "string",
          "readOnly": true
        },
        "_perms": {
          "title": "perms",
          "type": "string"
        },
        "n_complete": {
          "title": "N complete",
          "type": "string",
          "readOnly": true
        },
        "n_total": {
          "title": "N total",
          "type": "string",
          "readOnly": true
        },
        "BSA": {
          "title": "Bsa",
          "type": "string",
          "format": "decimal"
        },
        "tags": {
          "title": "Tags",
          "type": "string"
        },
        "siteID": {
          "title": "SiteID",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "delete_at": {
          "title": "Delete at",
          "type": "string"
        }
      }
    },
    "Field": {
      "required": [
        "field"
      ],
      "type": "object",
      "properties": {
        "field": {
          "title": "Field",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      }
    },
    "FilterList": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 320,
          "minLength": 1
        },
        "filters": {
          "title": "Filters",
          "type": "string"
        },
        "selected": {
          "title": "Selected",
          "type": "string"
        }
      }
    },
    "StudyTrial": {
      "required": [
        "trial"
      ],
      "type": "object",
      "properties": {
        "trial": {
          "title": "Trial",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "StudyUploader": {
      "required": [
        "uploader"
      ],
      "type": "object",
      "properties": {
        "uploader": {
          "title": "Uploader",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "StudyVersion": {
      "required": [
        "version"
      ],
      "type": "object",
      "properties": {
        "version": {
          "title": "Version",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Backend": {
      "required": [
        "id",
        "name",
        "apiurl",
        "mediaurl"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "minLength": 1
        },
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "minLength": 1
        },
        "apiurl": {
          "title": "Apiurl",
          "type": "string",
          "minLength": 1
        },
        "mediaurl": {
          "title": "Mediaurl",
          "type": "string",
          "minLength": 1
        },
        "presignurl": {
          "title": "Presignurl",
          "type": "string",
          "minLength": 1
        },
        "uploadurl": {
          "title": "Uploadurl",
          "type": "string",
          "minLength": 1
        },
        "disallow_alternate_frontend": {
          "title": "Disallow alternate frontend",
          "type": "boolean"
        },
        "configuration": {
          "title": "Configuration",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Banner": {
      "required": [
        "id",
        "text",
        "url",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "minLength": 1
        },
        "text": {
          "title": "Text",
          "type": "string",
          "minLength": 1
        },
        "url": {
          "title": "Url",
          "type": "string",
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Config": {
      "required": [
        "regions"
      ],
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "Modification": {
      "required": [
        "obj_pk",
        "model",
        "action"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "obj_pk": {
          "title": "Obj pk",
          "type": "string",
          "format": "uuid"
        },
        "model": {
          "title": "Model",
          "type": "string",
          "maxLength": 31,
          "minLength": 1
        },
        "action": {
          "title": "Action",
          "type": "string",
          "enum": [
            "upsert",
            "update",
            "create",
            "delete"
          ]
        },
        "new_fields": {
          "title": "New fields",
          "type": "string"
        },
        "creation": {
          "title": "Creation",
          "type": "string",
          "format": "date-time"
        },
        "study_id": {
          "title": "Study id",
          "type": "string",
          "readOnly": true
        },
        "user": {
          "title": "User",
          "type": "string",
          "maxLength": 31,
          "x-nullable": true
        }
      }
    },
    "EmailNotifications": {
      "type": "object",
      "properties": {
        "on": {
          "title": "On",
          "type": "boolean",
          "default": false
        },
        "notifications": {
          "title": "Notifications",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": true
            }
          },
          "default": {}
        },
        "trials": {
          "title": "Trials",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": true
            }
          },
          "default": {}
        },
        "last_notified_dates": {
          "title": "Last notified dates",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "date-time"
          },
          "readOnly": true,
          "default": {}
        }
      }
    },
    "Notifications": {
      "type": "object",
      "properties": {
        "email": {
          "$ref": "#/definitions/EmailNotifications"
        }
      }
    },
    "Proto": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "minLength": 1
        },
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        },
        "exclusive": {
          "title": "Exclusive",
          "type": "boolean"
        },
        "perms": {
          "title": "Perms",
          "type": "string",
          "readOnly": true
        },
        "is_managed": {
          "title": "Is managed",
          "type": "boolean"
        }
      }
    },
    "Protocol": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        },
        "protocol": {
          "title": "Protocol",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "current_protocol": {
          "title": "Current protocol",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "readOnly": true
        },
        "user_protocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Proto"
          },
          "readOnly": true
        },
        "general_protocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Proto"
          },
          "readOnly": true
        }
      }
    },
    "OnetimeSecret": {
      "required": [
        "payload"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "payload": {
          "title": "Payload",
          "type": "string"
        }
      }
    },
    "Query": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": true
            }
          },
          "default": []
        }
      },
      "default": {
        "raw": []
      }
    },
    "SummaryQuery": {
      "type": "object",
      "properties": {
        "group_by": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "default": []
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Query"
          },
          "default": []
        },
        "model": {
          "title": "Model",
          "type": "string",
          "default": "Study",
          "minLength": 1
        },
        "stats": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "default": []
        },
        "summaries": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": true
            }
          },
          "readOnly": true
        },
        "region": {
          "title": "Region",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "GroundTruthDataset": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 63,
          "x-nullable": true
        },
        "n": {
          "title": "N",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Version": {
      "required": [
        "version"
      ],
      "type": "object",
      "properties": {
        "version": {
          "title": "Version",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 63,
          "minLength": 1
        },
        "config": {
          "title": "Config",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "reviewer": {
          "title": "Reviewer",
          "type": "string"
        },
        "assigned": {
          "title": "Assigned",
          "type": "string"
        },
        "trial_id": {
          "title": "Trial id",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "perms": {
          "title": "Perms",
          "type": "string",
          "readOnly": true
        },
        "verifications": {
          "title": "Verifications",
          "type": "string"
        },
        "dependencies": {
          "title": "Dependencies",
          "type": "string"
        },
        "filters": {
          "title": "Filters",
          "type": "string"
        }
      }
    },
    "RelatedProject": {
      "required": [
        "project_id",
        "project_name",
        "state",
        "task_id"
      ],
      "type": "object",
      "properties": {
        "project_id": {
          "title": "Project id",
          "type": "string",
          "format": "uuid"
        },
        "project_name": {
          "title": "Project name",
          "type": "string",
          "minLength": 1
        },
        "state": {
          "title": "State",
          "type": "string",
          "minLength": 1
        },
        "task_id": {
          "title": "Task id",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "project_id": {
          "title": "Project id",
          "type": "string",
          "readOnly": true
        },
        "study_id": {
          "title": "Study id",
          "type": "string",
          "readOnly": true
        },
        "last_accessed": {
          "title": "Last accessed",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "notes": {
          "title": "Notes",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "issues": {
          "title": "Issues",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "queries": {
          "title": "Queries",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "state": {
          "title": "State",
          "type": "string",
          "minLength": 1
        },
        "feedback": {
          "title": "Feedback",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "assigned": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        },
        "related_projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedProject"
          },
          "readOnly": true
        }
      }
    },
    "ProjectTemplate": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 63,
          "minLength": 1
        },
        "config": {
          "title": "Config",
          "type": "string"
        }
      }
    },
    "Trial": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 63,
          "minLength": 1
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": true
            }
          }
        },
        "total_projects": {
          "title": "Total projects",
          "type": "string",
          "readOnly": true
        },
        "total_studies": {
          "title": "Total studies",
          "type": "string",
          "readOnly": true
        },
        "verifications": {
          "title": "Verifications",
          "type": "object"
        },
        "search": {
          "title": "Search",
          "type": "string",
          "enum": [
            "create",
            "delete"
          ]
        },
        "perms": {
          "title": "Perms",
          "type": "string",
          "readOnly": true
        },
        "distribution": {
          "title": "Distribution",
          "type": "string"
        }
      }
    },
    "TrialUploader": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 63,
          "minLength": 1
        },
        "user": {
          "title": "User",
          "type": "string",
          "readOnly": true
        },
        "verifications": {
          "title": "Verifications",
          "type": "object"
        }
      }
    },
    "ChangePassword": {
      "required": [
        "oldPassword",
        "newPassword"
      ],
      "type": "object",
      "properties": {
        "oldPassword": {
          "title": "Oldpassword",
          "type": "string",
          "minLength": 1
        },
        "newPassword": {
          "title": "Newpassword",
          "type": "string",
          "minLength": 1
        },
        "accessToken": {
          "title": "Accesstoken",
          "type": "string"
        }
      }
    },
    "Subscription": {
      "required": [
        "SubscriptionId",
        "DisplayName",
        "ExpireDate"
      ],
      "type": "object",
      "properties": {
        "SubscriptionId": {
          "title": "SubscriptionId",
          "type": "string",
          "minLength": 1
        },
        "DisplayName": {
          "title": "DisplayName",
          "type": "string",
          "minLength": 1
        },
        "Groups": {
          "title": "Groups",
          "type": "string"
        },
        "ExpireDate": {
          "title": "ExpireDate",
          "type": "string",
          "format": "date"
        },
        "CreationDate": {
          "title": "CreationDate",
          "type": "string",
          "format": "date"
        },
        "Users": {
          "title": "Users",
          "type": "string"
        },
        "AdminUsers": {
          "title": "AdminUsers",
          "type": "string"
        },
        "Templates": {
          "title": "Templates",
          "type": "string"
        },
        "UsageCount": {
          "title": "UsageCount",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "TotalCount": {
          "title": "TotalCount",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "DurationYears": {
          "title": "DurationYears",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "DurationMonths": {
          "title": "DurationMonths",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "DurationDays": {
          "title": "DurationDays",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "DurationHours": {
          "title": "DurationHours",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "LastResetDate": {
          "title": "LastResetDate",
          "type": "string",
          "format": "date"
        },
        "Limit": {
          "title": "Limit",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "HardwareId": {
          "title": "HardwareId",
          "type": "string"
        },
        "Partner": {
          "title": "Partner",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "EcholoaderSettings": {
      "type": "object",
      "properties": {
        "advanced": {
          "title": "Advanced",
          "type": "boolean"
        },
        "anonymize": {
          "title": "Anonymize",
          "type": "boolean"
        },
        "raw": {
          "title": "Raw",
          "type": "boolean"
        },
        "anonymize_settings": {
          "title": "Anonymize settings",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "is_superuser": {
          "title": "Superuser status",
          "description": "Designates that this user has all permissions without explicitly assigning them.",
          "type": "boolean",
          "readOnly": true
        },
        "is_staff": {
          "title": "Staff status",
          "description": "Designates whether the user can log into this admin site.",
          "type": "boolean",
          "readOnly": true
        },
        "permissions": {
          "title": "Permissions",
          "type": "string",
          "readOnly": true
        },
        "attributes": {
          "title": "Attributes",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "email": {
          "title": "Email address",
          "type": "string",
          "format": "email",
          "readOnly": true,
          "minLength": 1
        },
        "username": {
          "title": "Username",
          "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
          "type": "string",
          "pattern": "^[\\w.@+-]+$",
          "maxLength": 150,
          "minLength": 1
        },
        "accessToken": {
          "title": "Accesstoken",
          "type": "string"
        },
        "cognito_id": {
          "title": "Cognito id",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "warnings": {
          "title": "Warnings",
          "type": "string",
          "readOnly": true
        },
        "subscription": {
          "$ref": "#/definitions/Subscription"
        },
        "features": {
          "title": "Features",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        },
        "report_settings": {
          "title": "Report settings",
          "type": "string"
        },
        "report_logo": {
          "title": "Report logo",
          "type": "string",
          "x-nullable": true
        },
        "echoloader_settings": {
          "$ref": "#/definitions/EcholoaderSettings"
        },
        "modules": {
          "title": "Modules",
          "type": "string",
          "readOnly": true
        },
        "dicom_router_config": {
          "title": "Dicom router config",
          "type": "string"
        },
        "default_search": {
          "$ref": "#/definitions/FilterList"
        },
        "default_search_id": {
          "title": "Default search id",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        }
      }
    },
    "RetrieveUserIdp": {
      "required": [
        "userEmail"
      ],
      "type": "object",
      "properties": {
        "userEmail": {
          "title": "User Email",
          "type": "string",
          "minLength": 1
        },
        "usersHasIDP": {
          "title": "Usershasidp",
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "hasLocalProvider": {
          "title": "Haslocalprovider",
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "hasExternalProvider": {
          "title": "Hasexternalprovider",
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "allProviderName": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        }
      }
    },
    "Group": {
      "required": [
        "GroupName"
      ],
      "type": "object",
      "properties": {
        "GroupName": {
          "title": "Groupname",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Logging": {
      "required": [
        "url",
        "page",
        "msg",
        "type",
        "userAgent",
        "userLang"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "minLength": 1
        },
        "page": {
          "title": "Page",
          "type": "string",
          "minLength": 1
        },
        "msg": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": true
            }
          }
        },
        "type": {
          "title": "Type",
          "type": "string",
          "minLength": 1
        },
        "userAgent": {
          "title": "Useragent",
          "type": "string",
          "minLength": 1
        },
        "userLang": {
          "title": "Userlang",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "NewDeviceMetadata": {
      "type": "object",
      "properties": {
        "DeviceKey": {
          "title": "Devicekey",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "DeviceGroupKey": {
          "title": "Devicegroupkey",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "AuthenticationResult": {
      "type": "object",
      "properties": {
        "AccessToken": {
          "title": "Accesstoken",
          "type": "string",
          "readOnly": true
        },
        "ExpiresIn": {
          "title": "Expiresin",
          "type": "integer",
          "readOnly": true
        },
        "TokenType": {
          "title": "Tokentype",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "RefreshToken": {
          "title": "Refreshtoken",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "IdToken": {
          "title": "Idtoken",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "NewDeviceMetadata": {
          "$ref": "#/definitions/NewDeviceMetadata"
        }
      }
    },
    "UserAttributes": {
      "type": "object",
      "properties": {
        "Name": {
          "title": "Name",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "Value": {
          "title": "Value",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "MFAOptions": {
      "type": "object",
      "properties": {
        "DeliveryMedium": {
          "title": "Deliverymedium",
          "type": "string",
          "enum": [
            "SMS",
            "EMAIL"
          ],
          "readOnly": true
        },
        "AttributeName": {
          "title": "Attributename",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "Auth": {
      "required": [
        "username",
        "password"
      ],
      "type": "object",
      "properties": {
        "ChallengeName": {
          "title": "Challengename",
          "type": "string",
          "enum": [
            "SMS_MFA",
            "SOFTWARE_TOKEN_MFA",
            "SELECT_MFA_TYPE",
            "MFA_SETUP",
            "PASSWORD_VERIFIER",
            "CUSTOM_CHALLENGE",
            "DEVICE_SRP_AUTH",
            "DEVICE_PASSWORD_VERIFIER",
            "ADMIN_NO_SRP_AUTH",
            "NEW_PASSWORD_REQUIRED"
          ],
          "readOnly": true
        },
        "Session": {
          "title": "Session",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "ChallengeParameters": {
          "title": "Challengeparameters",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "readOnly": true
        },
        "AuthenticationResult": {
          "$ref": "#/definitions/AuthenticationResult"
        },
        "Username": {
          "title": "Username",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "UserAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAttributes"
          },
          "readOnly": true
        },
        "MFAOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MFAOptions"
          },
          "readOnly": true
        },
        "PreferredMfaSetting": {
          "title": "Preferredmfasetting",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "UserMFASettingList": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        },
        "username": {
          "title": "Username",
          "type": "string",
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        },
        "code": {
          "title": "Code",
          "type": "string",
          "minLength": 1
        },
        "session": {
          "title": "Session",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Log": {
      "required": [
        "action",
        "server_api",
        "client_api"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "action": {
          "title": "Action",
          "type": "string",
          "minLength": 1
        },
        "input": {
          "title": "Input",
          "type": "string",
          "x-nullable": true
        },
        "output": {
          "title": "Output",
          "type": "string",
          "x-nullable": true
        },
        "server_api": {
          "title": "Server api",
          "type": "string",
          "minLength": 1
        },
        "client_api": {
          "title": "Client api",
          "type": "string",
          "minLength": 1
        },
        "date": {
          "title": "Date",
          "type": "string",
          "format": "date-time"
        },
        "schema_uuid": {
          "title": "Schema uuid",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "username": {
          "title": "Username",
          "type": "string",
          "readOnly": true
        },
        "study_uuid": {
          "title": "Study uuid",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        }
      }
    },
    "MFAConfig": {
      "required": [
        "Enabled",
        "PreferredMfa"
      ],
      "type": "object",
      "properties": {
        "Enabled": {
          "title": "Enabled",
          "type": "boolean"
        },
        "PreferredMfa": {
          "title": "Preferredmfa",
          "type": "boolean"
        }
      }
    },
    "SetUserMfaPreference": {
      "required": [
        "AccessToken",
        "SoftwareTokenMfaSettings"
      ],
      "type": "object",
      "properties": {
        "AccessToken": {
          "title": "Accesstoken",
          "type": "string"
        },
        "Session": {
          "title": "Session",
          "type": "string",
          "minLength": 1
        },
        "SoftwareTokenMfaSettings": {
          "$ref": "#/definitions/MFAConfig"
        }
      }
    },
    "AssociateSoftwareToken": {
      "required": [
        "AccessToken"
      ],
      "type": "object",
      "properties": {
        "AccessToken": {
          "title": "Accesstoken",
          "type": "string"
        },
        "Session": {
          "title": "Session",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "SecretCode": {
          "title": "Secretcode",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "VerifySoftwareToken": {
      "required": [
        "AccessToken",
        "UserCode",
        "FriendlyDeviceName"
      ],
      "type": "object",
      "properties": {
        "AccessToken": {
          "title": "Accesstoken",
          "type": "string"
        },
        "Session": {
          "title": "Session",
          "type": "string",
          "minLength": 1
        },
        "UserCode": {
          "title": "Usercode",
          "type": "string",
          "minLength": 1
        },
        "FriendlyDeviceName": {
          "title": "Friendlydevicename",
          "type": "string",
          "minLength": 1
        },
        "Status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ],
          "readOnly": true
        }
      }
    },
    "CompleteNewPassword": {
      "required": [
        "oldPassword",
        "newPassword",
        "user"
      ],
      "type": "object",
      "properties": {
        "ChallengeName": {
          "title": "Challengename",
          "type": "string",
          "enum": [
            "SMS_MFA",
            "SOFTWARE_TOKEN_MFA",
            "SELECT_MFA_TYPE",
            "MFA_SETUP",
            "PASSWORD_VERIFIER",
            "CUSTOM_CHALLENGE",
            "DEVICE_SRP_AUTH",
            "DEVICE_PASSWORD_VERIFIER",
            "ADMIN_NO_SRP_AUTH",
            "NEW_PASSWORD_REQUIRED"
          ],
          "readOnly": true
        },
        "Session": {
          "title": "Session",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "ChallengeParameters": {
          "title": "Challengeparameters",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "readOnly": true
        },
        "AuthenticationResult": {
          "$ref": "#/definitions/AuthenticationResult"
        },
        "Username": {
          "title": "Username",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "UserAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAttributes"
          },
          "readOnly": true
        },
        "MFAOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MFAOptions"
          },
          "readOnly": true
        },
        "PreferredMfaSetting": {
          "title": "Preferredmfasetting",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "UserMFASettingList": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        },
        "oldPassword": {
          "title": "Oldpassword",
          "type": "string",
          "minLength": 1
        },
        "newPassword": {
          "title": "Newpassword",
          "type": "string",
          "minLength": 1
        },
        "accessToken": {
          "title": "Accesstoken",
          "type": "string"
        },
        "user": {
          "title": "User",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RefreshToken": {
      "required": [
        "refreshToken"
      ],
      "type": "object",
      "properties": {
        "ChallengeName": {
          "title": "Challengename",
          "type": "string",
          "enum": [
            "SMS_MFA",
            "SOFTWARE_TOKEN_MFA",
            "SELECT_MFA_TYPE",
            "MFA_SETUP",
            "PASSWORD_VERIFIER",
            "CUSTOM_CHALLENGE",
            "DEVICE_SRP_AUTH",
            "DEVICE_PASSWORD_VERIFIER",
            "ADMIN_NO_SRP_AUTH",
            "NEW_PASSWORD_REQUIRED"
          ],
          "readOnly": true
        },
        "Session": {
          "title": "Session",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "ChallengeParameters": {
          "title": "Challengeparameters",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "readOnly": true
        },
        "AuthenticationResult": {
          "$ref": "#/definitions/AuthenticationResult"
        },
        "Username": {
          "title": "Username",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "UserAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAttributes"
          },
          "readOnly": true
        },
        "MFAOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MFAOptions"
          },
          "readOnly": true
        },
        "PreferredMfaSetting": {
          "title": "Preferredmfasetting",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "UserMFASettingList": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        },
        "refreshToken": {
          "title": "Refreshtoken",
          "type": "string",
          "minLength": 1
        },
        "deviceKey": {
          "title": "Devicekey",
          "type": "string"
        }
      }
    },
    "ResetPassword": {
      "required": [
        "email"
      ],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        },
        "code": {
          "title": "Code",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "SAML2Jwt": {
      "type": "object",
      "properties": {
        "ChallengeName": {
          "title": "Challengename",
          "type": "string",
          "enum": [
            "SMS_MFA",
            "SOFTWARE_TOKEN_MFA",
            "SELECT_MFA_TYPE",
            "MFA_SETUP",
            "PASSWORD_VERIFIER",
            "CUSTOM_CHALLENGE",
            "DEVICE_SRP_AUTH",
            "DEVICE_PASSWORD_VERIFIER",
            "ADMIN_NO_SRP_AUTH",
            "NEW_PASSWORD_REQUIRED"
          ],
          "readOnly": true
        },
        "Session": {
          "title": "Session",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "ChallengeParameters": {
          "title": "Challengeparameters",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "readOnly": true
        },
        "AuthenticationResult": {
          "$ref": "#/definitions/AuthenticationResult"
        },
        "Username": {
          "title": "Username",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "UserAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAttributes"
          },
          "readOnly": true
        },
        "MFAOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MFAOptions"
          },
          "readOnly": true
        },
        "PreferredMfaSetting": {
          "title": "Preferredmfasetting",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "UserMFASettingList": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        }
      }
    },
    "Template": {
      "required": [
        "TemplateId"
      ],
      "type": "object",
      "properties": {
        "TemplateId": {
          "title": "TemplateId",
          "type": "string",
          "minLength": 1
        },
        "Groups": {
          "title": "Groups",
          "type": "string"
        }
      }
    },
    "ManageUser": {
      "required": [
        "email",
        "username"
      ],
      "type": "object",
      "properties": {
        "is_superuser": {
          "title": "Superuser status",
          "description": "Designates that this user has all permissions without explicitly assigning them.",
          "type": "boolean"
        },
        "is_staff": {
          "title": "Staff status",
          "description": "Designates whether the user can log into this admin site.",
          "type": "boolean"
        },
        "permissions": {
          "title": "Permissions",
          "type": "string"
        },
        "attributes": {
          "title": "Attributes",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "email": {
          "title": "Email",
          "type": "string",
          "minLength": 1
        },
        "username": {
          "title": "Username",
          "type": "string",
          "minLength": 1
        },
        "accessToken": {
          "title": "Accesstoken",
          "type": "string"
        },
        "cognito_id": {
          "title": "Cognito id",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "warnings": {
          "title": "Warnings",
          "type": "string",
          "readOnly": true
        },
        "subscription": {
          "$ref": "#/definitions/Subscription"
        },
        "features": {
          "title": "Features",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        },
        "report_settings": {
          "title": "Report settings",
          "type": "string"
        },
        "report_logo": {
          "title": "Report logo",
          "type": "string",
          "x-nullable": true
        },
        "echoloader_settings": {
          "$ref": "#/definitions/EcholoaderSettings"
        },
        "modules": {
          "title": "Modules",
          "type": "string"
        },
        "dicom_router_config": {
          "title": "Dicom router config",
          "type": "string"
        },
        "default_search": {
          "$ref": "#/definitions/FilterList"
        },
        "default_search_id": {
          "title": "Default search id",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "password": {
          "title": "Password",
          "type": "string"
        },
        "onboard": {
          "title": "Onboard",
          "type": "boolean",
          "default": true
        },
        "onboardEmail": {
          "title": "Onboardemail",
          "type": "string",
          "default": ""
        },
        "cc": {
          "title": "Cc",
          "type": "string",
          "default": ""
        },
        "SubscriptionId": {
          "title": "Subscriptionid",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "MeasurementInfo": {
      "required": [
        "code",
        "unit",
        "name",
        "method_group"
      ],
      "type": "object",
      "properties": {
        "code": {
          "title": "Code",
          "type": "string",
          "minLength": 1
        },
        "unit": {
          "title": "Unit",
          "type": "string",
          "minLength": 1
        },
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        },
        "method_group": {
          "title": "Method group",
          "type": "string",
          "minLength": 1
        },
        "conf_adj": {
          "title": "Conf adj",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Dataset": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 63,
          "x-nullable": true
        }
      }
    },
    "ValidationRun": {
      "required": [
        "dataset"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "x-nullable": true
        },
        "date": {
          "title": "Date",
          "type": "string",
          "format": "date-time"
        },
        "dataset": {
          "$ref": "#/definitions/Dataset"
        },
        "filters": {
          "title": "Filters",
          "type": "string"
        }
      }
    },
    "Snapshot": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "code": {
          "$ref": "#/definitions/MeasurementInfo"
        },
        "trials": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        },
        "date": {
          "title": "Date",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "dataset": {
          "$ref": "#/definitions/Dataset"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        },
        "validation": {
          "$ref": "#/definitions/ValidationRun"
        },
        "dataset_id": {
          "title": "Dataset id",
          "type": "string",
          "format": "uuid"
        },
        "job_id": {
          "title": "Job id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "invalid": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "readOnly": true
        },
        "validation_id": {
          "title": "Validation id",
          "type": "string",
          "format": "uuid"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": true
            }
          }
        },
        "csv": {
          "title": "Csv",
          "type": "string",
          "minLength": 1
        },
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        },
        "selection_methods": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        },
        "comparisons": {
          "type": "array",
          "items": {
            "type": "string",
            "x-nullable": true
          }
        },
        "confs": {
          "title": "Confs",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "readOnly": true
        },
        "stats": {
          "title": "Stats",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "readOnly": true
        },
        "patients": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        },
        "chart_types": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        },
        "value_translation": {
          "title": "Value translation",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "readOnly": true
        }
      }
    },
    "Label": {
      "required": [
        "text"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "minLength": 1
        },
        "text": {
          "title": "Text",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "GroundTruthUpdateDisplay": {
      "required": [
        "snapshot_id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          },
          "readOnly": true
        },
        "value": {
          "title": "Value",
          "type": "object"
        },
        "add_labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        },
        "del_labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        },
        "snapshot_id": {
          "title": "Snapshot id",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "SnapshotDisplay": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "code": {
          "$ref": "#/definitions/MeasurementInfo"
        },
        "trials": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        },
        "date": {
          "title": "Date",
          "type": "string",
          "format": "date-time"
        },
        "dataset": {
          "$ref": "#/definitions/Dataset"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        },
        "validation": {
          "$ref": "#/definitions/ValidationRun"
        },
        "dataset_id": {
          "title": "Dataset id",
          "type": "string",
          "format": "uuid"
        },
        "job_id": {
          "title": "Job id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "invalid": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "readOnly": true
        },
        "validation_id": {
          "title": "Validation id",
          "type": "string",
          "format": "uuid"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": true
            }
          }
        },
        "csv": {
          "title": "Csv",
          "type": "string",
          "minLength": 1
        },
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        },
        "selection_methods": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "readOnly": true
        }
      }
    }
  }
}